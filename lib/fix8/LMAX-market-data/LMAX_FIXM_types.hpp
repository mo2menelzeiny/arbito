//-------------------------------------------------------------------------------------------------
// *** f8c generated file: DO NOT EDIT! Created: 2018-05-18 17:05:47 ***
//-------------------------------------------------------------------------------------------------
/*

Fix8 is released under the GNU LESSER GENERAL PUBLIC LICENSE Version 3.

Fix8 Open Source FIX Engine.
Copyright (C) 2010-18 David L. Dight <fix@fix8.org>

Fix8 is free software: you can  redistribute it and / or modify  it under the  terms of the
GNU Lesser General  Public License as  published  by the Free  Software Foundation,  either
version 3 of the License, or (at your option) any later version.

Fix8 is distributed in the hope  that it will be useful, but WITHOUT ANY WARRANTY;  without
even the  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

You should  have received a copy of the GNU Lesser General Public  License along with Fix8.
If not, see <http://www.gnu.org/licenses/>.

*******************************************************************************************
*                Special note for Fix8 compiler generated source code                     *
*                                                                                         *
* Binary works  that are the results of compilation of code that is generated by the Fix8 *
* compiler  can be released  without releasing your  source code as  long as your  binary *
* links dynamically  against an  unmodified version of the Fix8 library.  You are however *
* required to leave the copyright text in the generated code.                             *
*                                                                                         *
*******************************************************************************************

BECAUSE THE PROGRAM IS  LICENSED FREE OF  CHARGE, THERE IS NO  WARRANTY FOR THE PROGRAM, TO
THE EXTENT  PERMITTED  BY  APPLICABLE  LAW.  EXCEPT WHEN  OTHERWISE  STATED IN  WRITING THE
COPYRIGHT HOLDERS AND/OR OTHER PARTIES  PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY
KIND,  EITHER EXPRESSED   OR   IMPLIED,  INCLUDING,  BUT   NOT  LIMITED   TO,  THE  IMPLIED
WARRANTIES  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO
THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE,
YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

IN NO EVENT UNLESS REQUIRED  BY APPLICABLE LAW  OR AGREED TO IN  WRITING WILL ANY COPYRIGHT
HOLDER, OR  ANY OTHER PARTY  WHO MAY MODIFY  AND/OR REDISTRIBUTE  THE PROGRAM AS  PERMITTED
ABOVE,  BE  LIABLE  TO  YOU  FOR  DAMAGES,  INCLUDING  ANY  GENERAL, SPECIAL, INCIDENTAL OR
CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT
NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR
THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH
HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

*/

//-------------------------------------------------------------------------------------------------
#include <fix8/f8config.h>
#if defined FIX8_MAGIC_NUM && FIX8_MAGIC_NUM > 16793600L
#error LMAX_FIXM_types.hpp version 1.4.0 is out of date. Please regenerate with f8c.
#endif
//-------------------------------------------------------------------------------------------------
// LMAX_FIXM_types.hpp
//-------------------------------------------------------------------------------------------------
#ifndef FIX8_4C4D41585F4649584D5F74797065732E687070_
#define FIX8_4C4D41585F4649584D5F74797065732E687070_

namespace FIX8 {
namespace LMAX {

//-------------------------------------------------------------------------------------------------
using BeginSeqNo = Field<SeqNum, 7>;
//-------------------------------------------------------------------------------------------------
using BeginString = Field<f8String, 8>;
//-------------------------------------------------------------------------------------------------
using BodyLength = Field<Length, 9>;
//-------------------------------------------------------------------------------------------------
using CheckSum = Field<f8String, 10>;
//-------------------------------------------------------------------------------------------------
using EndSeqNo = Field<SeqNum, 16>;
//-------------------------------------------------------------------------------------------------
using SecurityIDSource = Field<f8String, 22>;
const f8String SecurityIDSource_EXCHSYMB("8");
const size_t SecurityIDSource_realm_els(1);
//-------------------------------------------------------------------------------------------------
using MsgSeqNum = Field<SeqNum, 34>;
//-------------------------------------------------------------------------------------------------
using MsgType = Field<f8String, 35>;
const f8String MsgType_HEARTBEAT("0");
const f8String MsgType_TESTREQUEST("1");
const f8String MsgType_RESENDREQUEST("2");
const f8String MsgType_REJECT("3");
const f8String MsgType_SEQUENCERESET("4");
const f8String MsgType_LOGOUT("5");
const f8String MsgType_LOGON("A");
const f8String MsgType_MARKETDATAREQUEST("V");
const f8String MsgType_MARKETDATASNAPSHOTFULLREFRESH("W");
const f8String MsgType_MARKETDATAREJECT("Y");
const size_t MsgType_realm_els(10);
//-------------------------------------------------------------------------------------------------
using NewSeqNo = Field<SeqNum, 36>;
//-------------------------------------------------------------------------------------------------
using PossDupFlag = Field<Boolean, 43>;
const char PossDupFlag_ORIGTRANS('N');
const char PossDupFlag_POSSDUP('Y');
const size_t PossDupFlag_realm_els(2);
//-------------------------------------------------------------------------------------------------
using RefSeqNum = Field<SeqNum, 45>;
//-------------------------------------------------------------------------------------------------
using SecurityID = Field<f8String, 48>;
//-------------------------------------------------------------------------------------------------
using SenderCompID = Field<f8String, 49>;
//-------------------------------------------------------------------------------------------------
using SendingTime = Field<UTCTimestamp, 52>;
//-------------------------------------------------------------------------------------------------
using TargetCompID = Field<f8String, 56>;
//-------------------------------------------------------------------------------------------------
using Text = Field<f8String, 58>;
//-------------------------------------------------------------------------------------------------
using PossResend = Field<Boolean, 97>;
const char PossResend_ORIGTRANS('N');
const char PossResend_POSSRESEND('Y');
const size_t PossResend_realm_els(2);
//-------------------------------------------------------------------------------------------------
using EncryptMethod = Field<int, 98>;
const int EncryptMethod_NONEOTHER(0);
const size_t EncryptMethod_realm_els(1);
//-------------------------------------------------------------------------------------------------
using HeartBtInt = Field<int, 108>;
//-------------------------------------------------------------------------------------------------
using TestReqID = Field<f8String, 112>;
//-------------------------------------------------------------------------------------------------
using OrigSendingTime = Field<UTCTimestamp, 122>;
//-------------------------------------------------------------------------------------------------
using GapFillFlag = Field<Boolean, 123>;
const char GapFillFlag_SEQUENCERESETIGNOREMSGSEQNUMNAFORFIXMLNOTUSED('N');
const char GapFillFlag_GAPFILLMESSAGEMSGSEQNUMFIELDVALID('Y');
const size_t GapFillFlag_realm_els(2);
//-------------------------------------------------------------------------------------------------
using ResetSeqNumFlag = Field<Boolean, 141>;
const char ResetSeqNumFlag_NO('N');
const char ResetSeqNumFlag_YES('Y');
const size_t ResetSeqNumFlag_realm_els(2);
//-------------------------------------------------------------------------------------------------
using NoRelatedSym = Field<NumInGroup, 146>;
//-------------------------------------------------------------------------------------------------
using MDReqID = Field<f8String, 262>;
//-------------------------------------------------------------------------------------------------
using SubscriptionRequestType = Field<char, 263>;
const char SubscriptionRequestType_SNAPSHOTUPDATE('1');
const char SubscriptionRequestType_UNSUBSCRIBE('2');
const size_t SubscriptionRequestType_realm_els(2);
//-------------------------------------------------------------------------------------------------
using MarketDepth = Field<int, 264>;
//-------------------------------------------------------------------------------------------------
using MDUpdateType = Field<int, 265>;
const int MDUpdateType_FULL(0);
const size_t MDUpdateType_realm_els(1);
//-------------------------------------------------------------------------------------------------
using NoMDEntryTypes = Field<NumInGroup, 267>;
//-------------------------------------------------------------------------------------------------
using NoMDEntries = Field<NumInGroup, 268>;
//-------------------------------------------------------------------------------------------------
using MDEntryType = Field<char, 269>;
const char MDEntryType_BID('0');
const char MDEntryType_OFFER('1');
const size_t MDEntryType_realm_els(2);
//-------------------------------------------------------------------------------------------------
using MDEntryPx = Field<price, 270>;
//-------------------------------------------------------------------------------------------------
using MDEntrySize = Field<Qty, 271>;
//-------------------------------------------------------------------------------------------------
using MDEntryDate = Field<UTCDateOnly, 272>;
//-------------------------------------------------------------------------------------------------
using MDEntryTime = Field<UTCTimeOnly, 273>;
//-------------------------------------------------------------------------------------------------
using MDReqRejReason = Field<char, 281>;
//-------------------------------------------------------------------------------------------------
using RefTagID = Field<int, 371>;
//-------------------------------------------------------------------------------------------------
using RefMsgType = Field<f8String, 372>;
//-------------------------------------------------------------------------------------------------
using SessionRejectReason = Field<int, 373>;
const int SessionRejectReason_INVALIDTAGNUMBER(0);
const int SessionRejectReason_REQUIREDTAGMISSING(1);
const int SessionRejectReason_TAGNOTDEFINEDFORTHISMESSAGETYPE(2);
const int SessionRejectReason_UNDEFINEDTAG(3);
const int SessionRejectReason_TAGSPECIFIEDWITHOUTAVALUE(4);
const int SessionRejectReason_VALUEISINCORRECTOUTOFRANGEFORTHISTAG(5);
const int SessionRejectReason_INCORRECTDATAFORMATFORVALUE(6);
const int SessionRejectReason_DECRYPTIONPROBLEM(7);
const int SessionRejectReason_SIGNATUREPROBLEM(8);
const int SessionRejectReason_COMPIDPROBLEM(9);
const int SessionRejectReason_SENDINGTIMEACCURACYPROBLEM(10);
const int SessionRejectReason_INVALIDMSGTYPE(11);
const int SessionRejectReason_XMLVALIDATIONERROR(12);
const int SessionRejectReason_TAGAPPEARSMORETHANONCE(13);
const int SessionRejectReason_TAGSPECIFIEDOUTOFREQUIREDORDER(14);
const int SessionRejectReason_REPEATINGGROUPFIELDSOUTOFORDER(15);
const int SessionRejectReason_INCORRECTNUMINGROUPCOUNTFORREPEATINGGROUP(16);
const int SessionRejectReason_NONDATAVALUEINCLUDESFIELDDELIMITERSOHCHARACTER(17);
const int SessionRejectReason_OTHER(99);
const size_t SessionRejectReason_realm_els(19);
//-------------------------------------------------------------------------------------------------
using MaxMessageSize = Field<Length, 383>;
//-------------------------------------------------------------------------------------------------
using Username = Field<f8String, 553>;
//-------------------------------------------------------------------------------------------------
using Password = Field<f8String, 554>;
//-------------------------------------------------------------------------------------------------
using LMAX_FIXM_BaseEntry = FieldTable;

} // namespace LMAX
} // namespace FIX8
#endif // FIX8_4C4D41585F4649584D5F74797065732E687070_
